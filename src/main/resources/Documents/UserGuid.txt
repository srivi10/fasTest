Here’s a user guide document for the `QEUtilityApp` screen based on the code you've provided:

---

# User Guide: QEUtilityApp

## 1.0 Home Screen

The `QEUtilityApp` is a Java Swing-based utility application designed to streamline the process of selecting and testing mobile devices. The app allows users to choose between Android and iOS devices for further utility operations, with options for future expansions. The interface is designed for simplicity, providing clear navigation and helpful tools for quality engineering tasks.

## Main Screen Layout

### 1. **Header Banner**

At the top of the screen, there's a blue gradient header banner with the title `fasTest`. This section provides a visually distinct branding area, enhancing the user interface's overall aesthetics.

### 2. **Device Selection Area**

Below the header banner, the main content of the app includes the following components:

- **Select Device Label**: A label prompting the user to select a device, displayed at the center of the screen.

- **Android Button**: Located on the left side, this button allows users to navigate to the Android Utility Screen.

- **iOS Button**: Located on the right side, this button is intended for future use and currently serves as a placeholder for the iOS Utility Screen.

### 3. **Help Options**

At the bottom of the screen, a `HelpOptionsPanel` will appear, offering assistance options. This panel becomes visible when the main frame is resized or displayed. The panel includes options like 'Need Help?', 'New Feature Request,' and 'Email' for easy access to support and feedback mechanisms.

## Using the QEUtilityApp

### **Starting the Application**

1. **Launch the App**: Double-click on the executable JAR file or run the application through your IDE by executing the `main` method.
2. **Main Screen**: The main screen with a header, device selection options, and a help section will be displayed.

### **Selecting a Device**

1. **Android**:
   - Click the `Android` button to navigate to the Android Utility Screen, where you can perform various Android-related tasks.
   - The main frame will temporarily disappear, and the Android Utility interface will be loaded.

2. **iOS**:
   - Click the `iOS` button to navigate to the iOS Utility Screen (for future implementation).
   - The iOS Utility interface will load once implemented, allowing you to interact with iOS devices.

### **Help Options**

1. **Accessing Help**:
   - Resize the application window slightly to reveal the `HelpOptionsPanel` at the bottom of the screen.
   - This panel provides links to resources such as user guides, feature requests, and email support.

2. **Feature Requests and Support**:
   - Click on the corresponding icons in the `HelpOptionsPanel` to request new features or contact support via email.

### **Closing the Application**

1. **Close the App**:
   - To exit the application, click the `X` button at the top-right corner of the window.
   - The app will terminate, closing all associated windows.

## Troubleshooting

- **Issue**: The iOS button does not open a new screen.
  - **Solution**: The iOS functionality is planned for future implementation. Currently, this button serves as a placeholder.

- **Issue**: The help options do not appear.
  - **Solution**: Try resizing the window slightly to trigger the appearance of the `HelpOptionsPanel`.

## Future Enhancements

- **iOS Utility Screen**: This feature will be implemented in a future release, providing similar utilities for iOS devices as the Android Utility Screen.

- **Additional Help Options**: Future updates may include more help resources or dynamic help content based on the user's current activity.

---

This user guide should help users understand how to navigate and use the `QEUtilityApp` effectively. If you need any additional sections or details, feel free to ask!

//2.1Android Utility screen

Overview of Features:
Back Button: A back button is present at the top left, which returns to the main app screen.
Device Status Label: Displays the connection status of connected Android devices.
Screenshot Functionality: A button to take screenshots with a feedback icon and success dialog.
Screen Recording Functionality: A button to open screen recording screen.
Account Finder: A button to open the AccountSelectionGUI.
Crash Scan: A button to initiate a crash scan with visual feedback (scanning icon and label).
Wi-Fi Control: Buttons to enable and disable Wi-Fi on connected devices.
Help Options Panel: A panel at the bottom that adjusts its position on window resize.

2.2 Screen Recording view
Overview
The Android Screen Recording GUI is a straightforward and user-friendly interface designed to help you record your Android device's screen effortlessly. This guide will walk you through the various features and functionalities available in the application.

Main Components
File Name Field:

Located near the top of the window, this field allows you to specify the name of your screen recording file. By default, it is set to "android_screen_record." You can change this to any desired name.
File Location Field:

This field displays the location where your screen recording will be saved. By default, the file will be saved on your Desktop. You can change the location by either typing a new path directly into the field or by using the "Browse" button.
Browse Button:

Clicking the "Browse" button will open a file chooser dialog, allowing you to select a different location for saving your recording. Once selected, the new path will appear in the File Location Field.
Start Recording Button:

Press this button to begin recording your Android device's screen. The recording will automatically use the file name and location specified in the fields above. The "Start Recording" button will be disabled once recording begins, and the "Stop Recording" button will become active.
Stop Recording Button:

Once you are done recording, press this button to stop the recording process. The recording will be saved to the specified location, and a confirmation message will appear in the saved location label. The "Stop Recording" button will be disabled after recording stops, and the "Start Recording" button will be re-enabled.
Saved Location Label:

This label displays the full path where your recording has been saved. It will appear after you stop the recording, giving you confirmation that your file has been successfully stored.
Help Options Panel:

Located at the bottom of the window, the Help Options Panel provides quick access to various help-related resources. This panel will dynamically adjust its position based on the window size to ensure it remains visible.
How to Use
Open the Screen Recording GUI:

Launch the application and the Screen Recording window will appear.
Set the File Name (Optional):

If you want to name your recording something other than "android_screen_record," enter your desired name in the File Name Field.
Choose File Location (Optional):

By default, your recording will be saved on the Desktop. If you prefer to save it elsewhere, click the "Browse" button and select your desired location.
Start Recording:

Click the "Start Recording" button to begin capturing your Android device's screen. Ensure your device is connected and ready.
Stop Recording:

When you're ready to finish, click the "Stop Recording" button. Your recording will be saved to the specified location, and the path will be displayed in the Saved Location Label.
Access Help (If Needed):

If you need assistance, refer to the Help Options Panel at the bottom of the window for quick access to support resources.
Additional Information
The application automatically adjusts to different screen sizes, ensuring that the Help Options Panel remains accessible.
The back button allows you to navigate back to the main application window if needed.
This guide should help you navigate and utilize the Android Screen Recording GUI effectively. If you encounter any issues, please refer to the Help Options Panel for further assistance.


The error Invalid or unsupported type: [mac] indicates that jpackage does not recognize the mac type specified. For JDK 17 and jpackage, the supported types are app-image, pkg, dmg, and msi (for other platforms).

Here's how you can modify your command:

Corrected jpackage Command
To create a macOS application, you should use the dmg or pkg type instead of mac. Here’s how you can adjust your command:

For Creating a macOS .dmg File (disk image):

How to build jar
mvn clean package




bash
Copy code
jpackage \
  --type dmg \
  --input out/artifacts/ProfitCalculator_jar \
  --name ProfitCalculator \
  --main-jar ProfitCalculator-1.0-SNAPSHOT.jar \
  --main-class org.srivi.Trading.QE.fasTest \
  --icon src/main/resources/icons/AppIcon.icns \
  --dest out/macos-app
For Creating a macOS .pkg File (installer package):

bash
Copy code
jpackage \
  --type pkg \
  --input out/artifacts/ProfitCalculator_jar \
  --name ProfitCalculator \
  --main-jar ProfitCalculator-1.0-SNAPSHOT.jar \
  --main-class org.srivi.Trading.QE.fasTest \
  --icon src/main/resources/icons/AppIcon.icns \
  --dest out/macos-app

 Steps to create Shell script
 -Create a directory scripts under resources
 -Navigate to scripts directory in terminal

//this will create shell script under script folder
 touch touch increment_version.sh

 //this will open sh script
nano increment_version.sh

copy paste the following

#!/bin/sh

# Define the path to version.txt relative to the project's root directory
VERSION_FILE="src/main/resources/versioning/version.txt"

# Check if the file exists
if [ ! -f "$VERSION_FILE" ]; then
  echo "Error: $VERSION_FILE not found!"
  exit 1
fi

# Read the current version from the version file
version=$(cat "$VERSION_FILE")
major=$(echo $version | cut -d. -f1)
minor=$(echo $version | cut -d. -f2)
patch=$(echo $version | cut -d. -f3)

# Increment the patch version
patch=$((patch + 1))

# Check if patch version has reached 10
if [ $patch -ge 10 ]; then
  patch=0
  minor=$((minor + 1))

  # Check if minor version has reached 10
  if [ $minor -ge 10 ]; then
    minor=0
    major=$((major + 1))
  fi
fi

# Update the version file with the new version
new_version="$major.$minor.$patch"
echo $new_version > "$VERSION_FILE"

# Add version.txt to the commit
git add "$VERSION_FILE"

echo "Version updated to $new_version"

Press ctrl+O to save and Ctrl+X to exit
// unzip jar file command

unzip /Users/srivi/IdeaProjects/ProfitCalculator/out/artifacts/ProfitCalculator_jar/fasTest-1.1.2.jar -d/Users/srivi/Downloads/FastestBuild

//How to re convert to jar file
zip -r ../FastestBuild.jar *

// Steps to run shell script
Now navigate to intellij terminal from the root directory run this

sh src/main/resources/scripts/increment_version.sh



Presentation
    Slide 1: About fasTest App
    The Tool that transforms mobile testing, making it faster, simpler, and smarter.
    A lightweight application designed with simplicity in mind
    Tailored to streamline testing on Android and iOS platforms.
    Built using Java and native libraries for optimal performance.
    Minimal setup required – start using right out of the box
    Focused on enhancing productivity and streamlining testing workflows

Slide 2: Streamlined Device Management
Control multiple devices with ease – intuitive handling, simple connectivity, and device status at a glance.
Core Tools for Android
	•	Powered by ADB (Android Debug Bridge) interacting with Android Devices
	•	Supports screen recording, screenshots, Crash Scan ,and Wi-Fi actions

Core Tools for iOS
	•	Utilizes xcrun and simctl for seamless control of iOS devices
	•	Supports screen recording, screenshots.


Slide 3: Seamless Screen Recording, Simplified
Record with a click, manage file names effortlessly, and capture vital testing moments without the hassle.

	•	Effortless Recording: Start and stop recordings with just a click.
	•	File Compatibility: Automatically saves in MP4 format, perfect for Jira uploads.
	•	Optimized File Sizes: Solves the issue of large MOV files by keeping file sizes compact and usable.
	•	Convenient Save Location: Recordings are directly saved to your Mac desktop for easy access.
	•	Device Cleanup: Automatically removes recordings from the device once saved, freeing up space.
	•	No More Overwrites: Avoid overwriting files with custom naming options.

Slide : 4 Crash Scans – Capturing the Invisible

	•	Critical Insight: Crash logs provide valuable insights for both QE and developers, helping pinpoint exact failures.
	•	Proactive Detection: Identify app crashes before they escalate, reducing production issues.
	•	Seamless Integration: With a single click, trigger a crash scan and instantly access the data that matters.
	•	Instant Feedback: Logs are automatically pulled from the device, showing you what went wrong and where.
	•	Clean Slate: The crash scan also cleans device logs, ensuring it’s ready to catch new crashes.
	•	Less Guesswork, More Precision: Enable developers to address specific crashes, speeding up the debug process.


	Slide :  5

	Account Finder – Your Gateway to Seamless Management

    	•	The Challenge: Navigating multiple accounts can be cumbersome, leading to confusion and lost time.
    	•	Central Repository: Our tool maintains a central repository of diverse accounts, ensuring you have quick access when you need it most.
    	•	Regular Updates: Accounts are regularly checked and updated, providing the most accurate and relevant information at your fingertips.
    	•	Enhanced Search: Quickly locate specific accounts based on user-defined criteria, saving valuable time and effort.
    	•	Future-Proofing: Upcoming releases will feature even more unique and complex accounts, further enriching your management capabilities.
    	•	Simplified Workflow: Eliminate the guesswork and focus on what truly matters – improving your productivity and efficiency.

    Benefits of Account Finder – Why You’ll Love It

    	•	Streamlined Access: Instantly retrieve account details without the hassle of navigating multiple platforms.
    	•	Time Efficiency: Spend less time searching and more time achieving, thanks to our organized structure.
    	•	Informed Decisions: With up-to-date information, make informed choices based on current account statuses.
    	•	Scalability: As your needs grow, our tool evolves, offering more options and features to enhance your experience.



SLide 6 : Easy Navigation – Your Support Hub

          	•	One-Click Access: Navigate effortlessly to the download link for the latest fasTest Build – keeping your tools up to date with minimal effort.
          	•	User Guide at Your Fingertips: Access the complete user guide in just one click, ensuring you have all the information you need to maximize the app’s potential.
          	•	Feature Requests Made Simple: Have a suggestion? Easily submit requests for new features with our dedicated link, allowing your voice to be heard.
          	•	Support at Your Service: Reach out for help with a straightforward support email option, ensuring you receive assistance when you need it most.
          	•	Account Requests: Need additional accounts? The app includes placeholders to request new accounts directly, streamlining your account management process.



